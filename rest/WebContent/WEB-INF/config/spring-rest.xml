<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd   
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd"
	default-lazy-init="false">

	
	<!-- 设置使用注解的类所在的jar包  context:component-scan除了具有context:annotation-config 的功能之外，
	还具有自动将带有@component,@service,@Repository等注解的对象注册到spring容器中的功能-->
	<context:component-scan base-package="com.xy.admx.rest" >
	
	</context:component-scan>
	
		<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="104857600" />
		<property name="maxInMemorySize" value="4096" />
	</bean>
	
	
	<!-- 完成服务端响应json -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" >  
   			<property name="messageConverters">  
      	  		<list>  
          	 		 <ref bean="mappingJacksonHttpMessageConverter"/>  
        		</list>  
    		</property>  
    		<property name="webBindingInitializer">
					<bean class="com.xy.admx.common.springmvc.BindingInitializer">
						 
					</bean>
			</property>
		</bean>  
	<bean id="objectMapper" class="com.xy.admx.common.springmvc.XyJsonMapper" ></bean>
		
	<mvc:interceptors>

		<mvc:interceptor>
			<mvc:mapping path="/custom/**" />
			<bean class="com.xy.admx.filter.CustomAuthInterceptor" />
		</mvc:interceptor>
	
	</mvc:interceptors>
	<bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
			<property name="objectMapper" ref="objectMapper">
			</property>  
   			<property name="supportedMediaTypes">  
       			<list>  
           	 		<value>application/json</value>  
        		</list>  
   		 </property>  
	</bean>  



</beans>